version: '3.8'

services:
  cert-copier:
    image: alpine:latest
    container_name: cert-copier
    volumes:
      - certificates:/source
      - ldap-certs:/target
    command: |
      sh -c "
        echo 'Waiting for certificates from certbot...'
        # Wait for certbot certificates to be available
        while [ ! -f /source/ldap-certs/cert.pem ]; do
          echo 'Certificates not ready, waiting 5 seconds...'
          sleep 5
        done
        echo 'Certificates found, copying to OpenLDAP format...'
        # Copy certificates with OpenLDAP expected names
        cp /source/ldap-certs/cert.pem /target/ldap.crt
        cp /source/ldap-certs/privkey.pem /target/ldap.key  
        cp /source/ldap-certs/fullchain.pem /target/ca.crt
        # Set proper ownership and permissions for OpenLDAP user (911:911)
        chown 911:911 /target/ldap.crt /target/ldap.key /target/ca.crt
        chmod 644 /target/ldap.crt /target/ca.crt
        chmod 640 /target/ldap.key
        # List copied files for verification
        ls -la /target/
        echo 'Certificates copied successfully to OpenLDAP volume'
      "
    depends_on:
      - certbot
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=cert-copier"

  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    restart: unless-stopped
    ports:
      - "636:636"
      - "389:389"
    environment:
      - LDAP_ORGANISATION=${LDAP_ORG:-Example Organization}
      - LDAP_DOMAIN=${LDAP_DOMAIN:-example.com}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
      - LDAP_CONFIG_PASSWORD=${LDAP_CONFIG_PASSWORD}
      - LDAP_TLS=false
      - LDAP_TLS_ENFORCE=false
      - LDAP_BACKEND=mdb
      - LDAP_LOG_LEVEL=256
      - CONTAINER_LOG_LEVEL=4
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - TEST_USER_PASSWORD=${TEST_USER_PASSWORD}
      - GUEST_USER_PASSWORD=${GUEST_USER_PASSWORD}
      - ADMIN_USER_PASSWORD=${ADMIN_USER_PASSWORD}
      - CONTRACTOR_PASSWORD=${CONTRACTOR_PASSWORD}
      - VIP_PASSWORD=${VIP_PASSWORD}
    volumes:
      - ldap-data:/var/lib/ldap
      - ldap-config:/etc/ldap/slapd.d
    networks:
      - ldap-network
    depends_on:
      - certbot
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=openldap"

  certbot:
    build:
      context: ./docker/certbot
      dockerfile: Dockerfile
    image: ldap-certbot:latest
    container_name: certbot
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - certificates:/etc/letsencrypt
      - certbot-www:/var/www/certbot
      - certbot-logs:/opt/certbot-logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DOMAIN=${LDAP_DOMAIN}
      - EMAIL=${LETSENCRYPT_EMAIL}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - RENEWAL_INTERVAL=${RENEWAL_INTERVAL:-43200}
      - DRY_RUN=${DRY_RUN:-false}
      - STAGING=${STAGING:-false}
    networks:
      - ldap-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=certbot"

volumes:
  ldap-data:
    driver: local
  ldap-config:
    driver: local
  certificates:
    driver: local
  certbot-www:
    driver: local
  ldap-health:
    driver: local
  certbot-logs:
    driver: local
  ldap-certs:
    driver: local

networks:
  ldap-network:
    driver: bridge
