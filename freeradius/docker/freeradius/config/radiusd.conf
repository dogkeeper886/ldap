# FreeRADIUS Server Configuration
# Basic configuration for WiFi authentication

# Prefix and configuration directory
prefix = /usr
exec_prefix = /usr
sysconfdir = /etc
localstatedir = /var
sbindir = ${exec_prefix}/sbin
logdir = /var/log/freeradius
raddbdir = /etc/freeradius/3.0
radacctdir = ${logdir}/radacct

# Process ID file
pidfile = /var/run/freeradius/freeradius.pid

# User and group
user = freerad
group = freerad

# Maximum number of requests
max_requests = 1024

# Logging configuration
log {
    destination = files
    file = ${logdir}/radius.log
    syslog_facility = daemon
    stripped_names = no
    auth = yes
    auth_badpass = yes
    auth_goodpass = no
}

# Security configuration
security {
    max_attributes = 200
    reject_delay = 1
    status_server = yes
    allow_core_dumps = no
}

# Load modules
$INCLUDE mods-enabled/

# Instantiate modules
instantiate {
    exec
    expr
    expiration
    logintime
}

# Thread pool configuration
thread pool {
    start_servers = 5
    max_servers = 32
    min_spare_servers = 3
    max_spare_servers = 10
    max_requests_per_server = 0
    auto_limit_acct = no
}

# Listen on authentication and accounting ports
listen {
    type = auth
    ipaddr = *
    port = 1812
    limit {
        max_connections = 16
        lifetime = 0
        idle_timeout = 30
    }
}

listen {
    type = acct
    ipaddr = *
    port = 1813
    limit {
        max_connections = 16
        lifetime = 0
        idle_timeout = 30
    }
}

# TLS listener for RadSec
listen {
    type = auth
    proto = tcp
    ipaddr = *
    port = 2083
    
    tls {
        private_key_file = ${certdir}/privkey.pem
        certificate_file = ${certdir}/cert.pem
        ca_file = ${certdir}/fullchain.pem
        
        # TLS configuration
        cipher_list = "ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS"
        cipher_server_preference = yes
        tls_max_version = "1.3"
        tls_min_version = "1.2"
        
        # Certificate verification
        require_client_cert = no
        verify_client_cert_cmd = "/opt/radius-scripts/verify-client-cert.sh"
        
        # Cache configuration
        cache {
            enable = yes
            lifetime = 24
            max_entries = 255
        }
    }
}

# Include clients configuration
$INCLUDE clients.conf

# Authorize section
authorize {
    filter_username
    preprocess
    chap
    mschap
    digest
    suffix
    eap {
        ok = return
    }
    files
    expiration
    logintime
    pap
}

# Authenticate section
authenticate {
    Auth-Type PAP {
        pap
    }
    Auth-Type CHAP {
        chap
    }
    Auth-Type MS-CHAP {
        mschap
    }
    digest
    eap
}

# Preacct section
preacct {
    preprocess
    acct_unique
    suffix
    files
}

# Accounting section
accounting {
    detail
    unix
    radutmp
    exec
    attr_filter.accounting_response
}

# Session section
session {
    radutmp
}

# Post-auth section
post-auth {
    update {
        &reply: += &session-state:
    }
    exec
    remove_reply_message_if_eap
    
    Post-Auth-Type REJECT {
        attr_filter.access_reject
        eap
        remove_reply_message_if_eap
    }
    
    Post-Auth-Type Challenge {
        remove_reply_message_if_eap
    }
}